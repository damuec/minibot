controller_server:
  ros__parameters:
    footprint_topic: "footprint"
    cmd_vel_topic: "nav_vel"
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.3
    progress_checker_plugins: ["progress_checker"]
    goal_checker_plugins: ["general_goal_checker"]
    controller_plugins: ["FollowPath"]
    use_realtime_priority: false

    # Progress checker
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0

    # Goal checker
    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25

    # DWB Controller
    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: True
      min_vel_x: -0.5
      max_vel_x: 0.5
      min_vel_y: 0.0
      max_vel_y: 0.0
      min_vel_theta: -1.0
      max_vel_theta: 1.0
      acc_lim_x: 2.5
      acc_lim_y: 0.0
      acc_lim_theta: 3.2
      decel_lim_x: -2.5
      decel_lim_y: 0.0
      decel_lim_theta: -3.2
      vx_samples: 20
      vy_samples: 0
      vtheta_samples: 40
      sim_time: 1.7
      linear_granularity: 0.05
      angular_granularity: 0.025
      transform_tolerance: 0.1
      use_rotate_to_heading: True
      rotate_to_heading_min_angle: 0.785
      goal_dist_tol: 0.25
      path_distance_bias: 32.0
      goal_distance_bias: 24.0
      occdist_scale: 0.01
      forward_point_distance: 0.325
      stop_on_rotation: True
      critics: ["RotateToGoal", "Oscillation", "GoalAlign", "PathAlign", "PathDist", "GoalDist", "ObstacleFootprint"]
      ObstacleFootprint:
        plugin: "dwb_critics::ObstacleFootprintCritic"
        costmap_layer: "voxel_layer"
        inflation_layer: "inflation_layer"
        max_vel_x: 0.5
        max_vel_theta: 1.0
        sum_scores: True
      RotateToGoal:
        plugin: "dwb_critics::RotateToGoalCritic"
        slop: 0.785
      GoalAlign:
        plugin: "dwb_critics::GoalAlignCritic"
        slope: 0.05
        max_vel_x: 0.5
        min_vel_x: 0.0
        max_vel_theta: 1.0
        min_speed_xy: 0.0
      PathAlign:
        plugin: "dwb_critics::PathAlignCritic"
        slope: 0.05
        max_vel_x: 0.5
        min_vel_x: 0.0
        max_vel_theta: 1.0
        min_speed_xy: 0.0
      PathDist:
        plugin: "dwb_critics::PathDistCritic"
        max_vel_x: 0.5
        min_vel_x: 0.0
        max_vel_theta: 1.0
      GoalDist:
        plugin: "dwb_critics::GoalDistCritic"
        max_vel_x: 0.5
        min_vel_x: 0.0
        max_vel_theta: 1.0
      Oscillation:
        plugin: "dwb_critics::OscillationCritic"
        oscillation_reset_dist: 0.05
        oscillation_reset_angle: 0.2

    # Local costmap configuration (keep it inside controller_server)
    local_costmap:
      ros__parameters:
        update_frequency: 2.0
        publish_frequency: 2.0
        global_frame: odom
        robot_base_frame: "base_footprint"
        rolling_window: true
        width: 3
        height: 3
        resolution: 0.05
        robot_radius: 0.22
        plugins: ["voxel_layer", "inflation_layer"]
        inflation_layer:
          plugin: "nav2_costmap_2d::InflationLayer"
          cost_scaling_factor: 3.0
          inflation_radius: 0.70
        voxel_layer:
          plugin: "nav2_costmap_2d::VoxelLayer"
          enabled: True
          publish_voxel_map: True
          origin_z: 0.0
          z_resolution: 0.05
          z_voxels: 16
          max_obstacle_height: 2.0
          mark_threshold: 0
          observation_sources: scan
          scan:
            topic: /scan
            max_obstacle_height: 2.0
            clearing: True
            marking: True
            data_type: "LaserScan"
            raytrace_max_range: 3.0
            raytrace_min_range: 0.0
            obstacle_max_range: 2.5
            obstacle_min_range: 0.0
        always_send_full_costmap: True